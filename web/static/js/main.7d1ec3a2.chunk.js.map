{"version":3,"sources":["config.js","services/auth.service.js","components/login.component.js","components/register.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","components/profile.component.js","common/EventBus.js","components/board-user.component.js","components/board-moderator.component.js","components/board-admin.component.js","App.js","serviceWorker.js","index.js"],"names":["config","LoginURL","BaseUrl","LogoffURL","username","password","axios","post","then","response","console","log","data","token","localStorage","setItem","JSON","stringify","removeItem","delete","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","email","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","authHeader","user","Authorization","baseUrl","get","headers","id","idUrl","pageCount","pageSize","pagingUrl","countUrl","put","Home","content","UserService","getById","Profile","redirect","userReady","currentUser","getCurrentUser","to","substring","substr","roles","map","index","key","eventBus","on","event","callback","document","addEventListener","detail","dispatch","dispatchEvent","CustomEvent","remove","removeEventListener","BoardUser","status","EventBus","BoardModerator","getModeratorBoard","BoardAdmin","getAdminBoard","App","logOut","showModeratorBoard","showAdminBoard","undefined","includes","logout","href","onClick","exact","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7d1ec3a2.chunk.js","sourcesContent":["const config = {\r\n    \"BaseUrl\": \"http://localhost:8081\"\r\n};\r\n\r\nexport default config;","import axios from \"axios\";\nimport config from '../config.js';\n\nconst LoginURL = config.BaseUrl + \"/login\";\n// const RegisterURL = \"http://localhost:8081/register\";\nconst LogoffURL = config.BaseUrl + \"/api/v1/my/logout\";\n\nclass AuthService {\n\n    login(username, password) {\n        return axios\n            .post(LoginURL, {\n                username,\n                password\n            })\n            .then(response => {\n                console.log(response);\n                if (response.data.token) {\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\n                }\n                return response.data;\n            });\n    }\n\n    logout() {\n        localStorage.removeItem(\"user\");\n\n        return axios\n            .delete(LogoffURL)\n            .then(response => {\n                //return response.data;\n                console.log(response);\n            });\n\n    }\n\n    /*\n    register(username, email, password) {\n      return axios.post(API_URL + \"signup\", {\n        username,\n        email,\n        password\n      });\n    }\n    */\n\n    getCurrentUser() {\n        return JSON.parse(localStorage.getItem('user'));\n    }\n}\n\nexport default new AuthService();\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.login(this.state.username, this.state.password).then(\n        () => {\n          this.props.history.push(\"/profile\");\n          window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n            </div>\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.username,\n        this.state.email,\n        this.state.password\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","/*\nexport default function authHeader() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user && user.token) {\n      // for Node.js Express back-end\n      return { 'x-access-token': user.accessToken };\n    } else {\n      return {};\n    }\n  };\n*/\n\nexport default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (user && user.token) {\n    return { Authorization: 'Bearer ' + user.token };\n  } else {\n    return {};\n  }\n}\n","import axios from \"axios\";\nimport config from '../config.js';\nimport authHeader from './auth-header';\n\nconst baseUrl = config.BaseUrl + '/api/v1/users';\n\nclass UserService {\n    get() {\n        return axios.get(baseUrl, { headers: authHeader() });\n    }\n\n    getById(id) {\n        const idUrl = `${baseUrl}/${id}`;\n\n        return axios.get(idUrl, { headers: authHeader() });\n    }\n\n    getPaging(pageCount, pageSize) {\n        const pagingUrl = `${baseUrl}/${pageCount}/${pageSize}`;\n        return axios.get(pagingUrl, { headers: authHeader() });\n    }\n\n    getCount() {\n        const countUrl = `${baseUrl}/count`;\n\n        return axios.get(countUrl, { headers: authHeader() });\n    }\n\n    post(user) {\n        return axios.post(baseUrl, user, { headers: authHeader() });\n    }\n\n    put(user) {\n        return axios.put(baseUrl, user, { headers: authHeader() });\n    }\n\n    delete(id) {\n        const idUrl = `${baseUrl}/${id}`;\n        return axios.delete(idUrl, { headers: authHeader() });\n    }\n}\n\nexport default new UserService();\n\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getById(14).then(\n      response => {\n        console.log(response.data);\n\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content.username}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthService from \"../services/auth.service\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirect: null,\n      userReady: false,\n      currentUser: { username: \"\" }\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n\n    if (!currentUser) this.setState({ redirect: \"/home\" });\n    this.setState({ currentUser: currentUser, userReady: true })\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"container\">\n        {(this.state.userReady) ?\n        <div>\n        <header className=\"jumbotron\">\n          <h3>\n            <strong>{currentUser.username}</strong> Profile\n          </h3>\n        </header>\n        <p>\n          <strong>Token:</strong>{\" \"}\n          {currentUser.token.substring(0, 20)} ...{\" \"}\n          {currentUser.token.substr(currentUser.token.length - 20)}\n        </p>\n        <p>\n          <strong>Id:</strong>{\" \"}\n          {currentUser.id}\n        </p>\n        <p>\n          <strong>Username:</strong>{\" \"}\n          {currentUser.username}\n        </p>\n        <strong>Authorities:</strong>\n        <ul>\n          {currentUser.roles &&\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n        </ul>\n      </div>: null}\n      </div>\n    );\n  }\n}\n","const eventBus = {\n  on(event, callback) {\n    document.addEventListener(event, (e) => callback(e.detail));\n  },\n  dispatch(event, data) {\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\n  },\n  remove(event, callback) {\n    document.removeEventListener(event, callback);\n  },\n};\n\nexport default eventBus;\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\nimport EventBus from \"../common/EventBus\";\n\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getById(12).then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n\n        if (error.response && error.response.status === 401) {\n          EventBus.dispatch(\"logout\");\n        }\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content.username}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\nimport EventBus from \"../common/EventBus\";\n\nexport default class BoardModerator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getModeratorBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n\n        if (error.response && error.response.status === 401) {\n          EventBus.dispatch(\"logout\");\n        }\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\nimport EventBus from \"../common/EventBus\";\n\nexport default class BoardAdmin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getAdminBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n\n        if (error.response && error.response.status === 401) {\n          EventBus.dispatch(\"logout\");\n        }\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Home from \"./components/home.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardModerator from \"./components/board-moderator.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\n\n// import AuthVerify from \"./common/auth-verify\";\nimport EventBus from \"./common/EventBus\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showModeratorBoard: user.roles.includes(\"management\"),\n        showAdminBoard: user.roles.includes(\"admin\"),\n      });\n    }\n    \n    EventBus.on(\"logout\", () => {\n      this.logOut();\n    });\n  }\n\n  componentWillUnmount() {\n    EventBus.remove(\"logout\");\n  }\n\n  logOut() {\n    AuthService.logout();\n    this.setState({\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n    });\n  }\n\n  render() {\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            bezKoder\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n\n            {showModeratorBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/mod\"} className=\"nav-link\">\n                  Moderator Board\n                </Link>\n              </li>\n            )}\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/admin\"} className=\"nav-link\">\n                  Admin Board\n                </Link>\n              </li>\n            )}\n\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/user\"} className=\"nav-link\">\n                  User\n                </Link>\n              </li>\n            )}\n          </div>\n\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/register\"} className=\"nav-link\">\n                  Sign Up\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/user\" component={BoardUser} />\n            <Route path=\"/mod\" component={BoardModerator} />\n            <Route path=\"/admin\" component={BoardAdmin} />\n          </Switch>\n        </div>\n\n        { /*<AuthVerify logOut={this.logOut}/> */ }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}